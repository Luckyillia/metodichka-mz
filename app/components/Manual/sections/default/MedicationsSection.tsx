"use client"

import { useState, useMemo } from "react"
import ExamplePhrase from "../../ExamplePhrase"
import { Search, X } from "lucide-react"

const MedicationsSection = () => {
  const [searchQuery, setSearchQuery] = useState("")

  const medications = [
    { symptom: "–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å", medicine: "–ú–∏–≥" },
    { symptom: "–ú–∏–≥—Ä–µ–Ω–∏", medicine: "–ê–º–∏–≥—Ä–µ–Ω–∏–Ω" },
    { symptom: "–°—É–¥–æ—Ä–æ–≥–∏, –Ω–µ—Ä–≤–Ω—ã–π —Ç–∏–∫", medicine: "–ê—Å–ø–∞—Ä–∫–∞–º" },
    { symptom: "–ë–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ", medicine: "–ù–æ—à–ø—É" },
    { symptom: "–¢–æ—à–Ω–æ—Ç–∞", medicine: "–î—Ä–∞–º–∏–Ω–∞" },
    { symptom: "–ò–∑–∂–æ–≥–∞", medicine: "–ê–ª–º–∞–≥–µ–ª—å" },
    { symptom: "–ë–æ–ª—å –≤ –ø–µ—á–µ–Ω–∏", medicine: "–ì–µ–ø–∞–±–µ–Ω–µ" },
    { symptom: "–°–µ—Ä–¥–µ—á–Ω–∞—è –±–æ–ª—å", medicine: "–ö–∞—Ä–¥–∏–æ–º–∞–≥–Ω–∏–ª" },
    { symptom: "–ü—Ä–æ—Å—Ç—É–¥–∞ –∏ –∂–∞—Ä", medicine: "–¢–µ—Ä–∞—Ñ–ª—é" },
    { symptom: "–ö–∞—à–µ–ª—å", medicine: "–õ–∞–∑–æ–ª–≤–∞–Ω" },
    { symptom: "–í–ª–∞–∂–Ω—ã–π –∫–∞—à–µ–ª—å —Å –º–æ–∫—Ä–æ—Ç–æ–π", medicine: "–ê–º–±—Ä–æ–±–µ–Ω–µ" },
    { symptom: "–ù–∞—Å–º–æ—Ä–∫", medicine: "–¢–∏–∑–∏–Ω" },
    { symptom: "–ë–æ–ª—å –≤ –≥–æ—Ä–ª–µ - —Å–ø—Ä–µ–∏", medicine: "–ì–µ–∫—Å–æ—Ä–∞–ª" },
    { symptom: "–ë–æ–ª–∏ –≤ –≥–ª–∞–∑–∞—Ö", medicine: "–í–∏–∑–∏–Ω" },
    { symptom: "–ë–æ–ª–∏ –≤ —É—à–∞—Ö", medicine: "–û—Ç–∏–Ω—É–º" },
    { symptom: "–ë–æ–ª–∏ –≤ –ø–æ—á–∫–∞—Ö", medicine: "–£—Ä–æ—Ö–æ–ª" },
    { symptom: "–ú–æ—á–µ–≤–æ–π –ø—É–∑—ã—Ä—å", medicine: "–¶–∏—Å—Ç–æ–Ω" },
    { symptom: "–ë–æ–ª–∏ –≤ —Å–ø–∏–Ω–µ, –Ω–æ–≥–∞—Ö –∏ —Å—É—Å—Ç–∞–≤–∞—Ö - –º–∞–∑—å", medicine: "–§–∞—Å—Ç—É–º-–≥–µ–ª—å" },
    { symptom: "–ì–µ–º–æ—Ä—Ä–æ–π - –°–≤–µ—á–∏ –æ—Ç –≥–µ–º–æ—Ä—Ä–æ—è", medicine: "–ù–∞—Ç–∞–ª—å—Å–∏–¥" },
    { symptom: "–î–∏–∞–±–µ—Ç", medicine: "–í–∏–∫—Ç–æ–∑–∞" },
    { symptom: "–£—à–∏–±—ã –∏ —Å—Å–∞–¥–∏–Ω—ã", medicine: "–î–æ–ª–æ–±–µ–Ω–µ" },
    { symptom: "–í–∏—Ç–∞–º–∏–Ω—ã", medicine: "–í–∏—Ç–∞–º–∏–∫—Å" },
    { symptom: "–ü–æ–≤—ã—à–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ", medicine: "–ê–Ω–¥–∏–ø–∞–ª" },
    { symptom: "–ü–æ–Ω–∏–∂–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ", medicine: "–ù–æ—Ä–∞–¥—Ä–µ–Ω–∞–ª–∏–Ω" },
    { symptom: "–û–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–∏–µ", medicine: "–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª" },
    { symptom: "–î–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø–æ—Ç–µ–Ω—Ü–∏–∏", medicine: "–°–∏–∞–ª–µ–∫—Å" },
    { symptom: "–ú–æ–ª–æ—á–Ω–∏—Ü–∞", medicine: "–ù–∏—Å—Ç–∞—Ç–∏–Ω" },
    { symptom: "–ü–æ–Ω–æ—Å", medicine: "–õ–æ–ø–µ—Ä–∞–º–∏–¥" },
    { symptom: "–ó–∞–ø–æ—Ä", medicine: "–õ–∏–Ω–µ–∫—Å –§–æ—Ä—Ç–µ" },
    { symptom: "–ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞", medicine: "–ù–∞–π—Ç–≤–µ–ª–ª" },
    { symptom: "–ü—Ä–∏—Å—Ç—É–ø—ã –ê—Å—Ç–º—ã", medicine: "–°–∞–ª—å–±—É—Ç–∞–º–æ–ª" },
    { symptom: "–°—Ç—Ä–µ—Å—Å", medicine: "–¢–µ–Ω–æ—Ç–µ–Ω" }
  ]

  const specialMedications = [
    {
      symptom: "–ê–ª–ª–µ—Ä–≥–∏—è",
      medicines: "–¶–µ—Ç—Ä–∏–Ω, –ö–ª–∞—Ä–∏—Ç–∏–Ω, –≠—Ä–∏—É—Å, –ó–æ–¥–∞–∫, –¢–∞–≤–µ–≥–∏–ª, –õ–æ—Ä–∞—Ç–∞–¥–∏–Ω",
      note: "–ü–æ—Å–ª–µ –æ–∫–∞–∑–∞–Ω–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∑—è—Ç—å –∞–Ω–∞–ª–∏–∑"
    },
    {
      symptom: "–ü—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Å–æ–∑–Ω–∞–Ω–∏—è",
      medicines: "–ù–∞—à–∞—Ç—ã—Ä–Ω—ã–π —Å–ø–∏—Ä—Ç",
      note: "–ù–∞—à–∞—Ç—ã—Ä–µ–º —Å–º–∞—á–∏–≤–∞—é—Ç –≤–∞—Ç—É –∏ –ø–æ–¥–Ω–æ—Å—è—Ç –ø–æ–¥ –Ω–æ—Å –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–µ–º—É"
    },
    {
      symptom: "–û–∂–æ–≥–∏",
      medicines: "–ë–µ–ø–∞–Ω—Ç–µ–Ω",
      note: "–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –æ–∂–æ–≥ –∞–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –ø–æ–≤—è–∑–∫–æ–π –ö–æ—Å–º–æ–ø–æ—Ä"
    }
  ]

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredMedications = useMemo(() => {
    if (!searchQuery.trim()) return medications

    const query = searchQuery.toLowerCase()
    return medications.filter(item => 
      item.symptom.toLowerCase().includes(query) || 
      item.medicine.toLowerCase().includes(query)
    )
  }, [searchQuery])

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤
  const filteredSpecialMedications = useMemo(() => {
    if (!searchQuery.trim()) return specialMedications

    const query = searchQuery.toLowerCase()
    return specialMedications.filter(item => 
      item.symptom.toLowerCase().includes(query) || 
      item.medicines.toLowerCase().includes(query)
    )
  }, [searchQuery])

  const clearSearch = () => setSearchQuery("")

  return (
    <>
      <div className="subsection">
        <h3>üíä –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤</h3>
        
        <div className="note">
          <p><strong>üìå –°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤: 500 —Ä—É–±–ª–µ–π</strong></p>
        </div>

        {/* –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ */}
        <div className="mt-6 mb-6">
          <div className="relative">
            <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5" />
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å–∏–º–ø—Ç–æ–º–∞–º –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full pl-12 pr-12 py-3 rounded-lg border-2 border-border bg-background text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-all"
            />
            {searchQuery && (
              <button
                onClick={clearSearch}
                className="absolute right-4 top-1/2 transform -translate-y-1/2 text-muted-foreground hover:text-foreground transition-colors"
                aria-label="–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"
              >
                <X className="w-5 h-5" />
              </button>
            )}
          </div>
          {searchQuery && (
            <p className="mt-2 text-sm text-muted-foreground">
              –ù–∞–π–¥–µ–Ω–æ: {filteredMedications.length + filteredSpecialMedications.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            </p>
          )}
        </div>

        {/* –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ */}
        <div className="mt-6 space-y-4">
          {filteredMedications.length > 0 ? (
            filteredMedications.map((item, index) => (
              <div key={index} className="bg-card/50 p-4 rounded-lg border-2 border-border hover:border-primary/50 transition-all">
                <h4 className="text-lg font-semibold text-foreground mb-2">{item.symptom}</h4>
                <ExamplePhrase text={`say –Ø –≤—ã–ø–∏—à—É –í–∞–º ${item.medicine}, –µ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å 500 —Ä—É–±–ª–µ–π, –í—ã —Å–æ–≥–ª–∞—Å–Ω—ã?`} />
              </div>
            ))
          ) : searchQuery ? (
            <div className="text-center py-8 text-muted-foreground">
              <p>–ü–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–ø–∏—Å–∫–µ</p>
            </div>
          ) : null}
        </div>

        {/* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ */}
        <div className="mt-8">
          <h4 className="text-xl font-semibold text-foreground mb-4">üîç –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏</h4>
          <div className="space-y-4">
            {filteredSpecialMedications.length > 0 ? (
              filteredSpecialMedications.map((item, index) => (
                <div key={index} className="bg-card/50 p-4 rounded-lg border-2 border-border hover:border-primary/50 transition-all">
                  <h4 className="text-lg font-semibold text-foreground mb-2">{item.symptom}</h4>
                  <p className="text-muted-foreground mb-2"><strong>–ü—Ä–µ–ø–∞—Ä–∞—Ç—ã:</strong> {item.medicines}</p>
                  <div className="note mt-2">
                    <strong>üìå –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> {item.note}
                  </div>
                </div>
              ))
            ) : searchQuery ? (
              <div className="text-center py-8 text-muted-foreground">
                <p>–ü–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö</p>
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </>
  )
}

export default MedicationsSection
