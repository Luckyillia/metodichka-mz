import React from 'react';
import ExamplePhrase from '../../../../ExamplePhrase';
import { CallsSettings, GlobalSettings } from '../types';
import { cities } from '../constants';

interface CallsTabProps {
    settings: CallsSettings;
    globalSettings: GlobalSettings;
    onSettingChange: (key: keyof CallsSettings, value: string) => void;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–∑–æ–≤–æ–≤
const generateCallsCommands = (settings: CallsSettings, globalSettings: GlobalSettings) => {
    const { callNumber, partnerName } = settings;
    const { city, doctorTag } = globalSettings;
    const hospital = city === '–ú–∏—Ä–Ω—ã–π' ? '–û–ö–ë' : '–¶–ì–ë';
    const partner = partnerName ? ` | –ù–∞–ø–∞—Ä–Ω–∏–∫: ${partnerName}.` : '';

    return {
        '–ü—Ä–∏–µ–º –≤—ã–∑–æ–≤–∞': [`r [${doctorTag}] –ü—Ä–∏–Ω—è–ª –≤—ã–∑–æ–≤ ‚Ññ ${callNumber}.${partner}`],
        '–ü—Ä–∏–±—ã—Ç–∏–µ –Ω–∞ –º–µ—Å—Ç–æ': [`r [${doctorTag}] –ü—Ä–∏–±—ã–ª –Ω–∞ –º–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞ ‚Ññ ${callNumber}.${partner}`],
        '–ì–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è': [`r [${doctorTag}] –ì–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∏—Ä—É—é –≤ ${hospital} ‚Ññ ${callNumber}.${partner}`],
        '–ü–µ—Ä–µ–¥–∞—á–∞ –ø–∞—Ü–∏–µ–Ω—Ç—É': [`r [${doctorTag}] –ü–µ—Ä–µ–¥–∞–Ω –≤ –ø—Ä–∏–µ–º–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ ${hospital}, –≤—ã–∑–æ–≤ ‚Ññ ${callNumber}${partner}`],
        '–í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω': [`r [${doctorTag}] –í—ã–∑–æ–≤ ‚Ññ ${callNumber} | –û–±—Ä–∞–±–æ—Ç–∞–Ω.${partner}`],
        '–õ–æ–∂–Ω—ã–π –≤—ã–∑–æ–≤': [`r [${doctorTag}] –í—ã–∑–æ–≤ ‚Ññ ${callNumber} | –õ–æ–∂–Ω—ã–π.${partner}`],
        '–û—Ç–º–µ–Ω–∞ –≤—ã–∑–æ–≤–∞': [`r [${doctorTag}] –í—ã–∑–æ–≤ ‚Ññ ${callNumber} | –û—Ç–º–µ–Ω–µ–Ω.${partner}`]
    };
};

const CallsTab: React.FC<CallsTabProps> = ({ settings, globalSettings, onSettingChange }) => {
    const commands = generateCallsCommands(settings, globalSettings);

    return (
        <>
            <div className="flex justify-between items-center mb-4">
                <h3>üöë –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—ã–∑–æ–≤–∞–º–∏</h3>
                <div className="flex gap-2 flex-wrap">
                    <div>
                        <label className="block text-sm font-medium mb-1">‚Ññ –≤—ã–∑–æ–≤–∞:</label>
                        <input
                            type="text"
                            value={settings.callNumber}
                            onChange={(e) => onSettingChange('callNumber', e.target.value)}
                            placeholder="1"
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        />
                    </div>
                    <div>
                        <label className="block text-sm font-medium mb-1">–ù–∞–ø–∞—Ä–Ω–∏–∫:</label>
                        <input
                            type="text"
                            value={settings.partnerName}
                            onChange={(e) => onSettingChange('partnerName', e.target.value)}
                            placeholder="–ò–º—è –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞"
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        />
                    </div>
                </div>
            </div>
            <div className="space-y-3">
                {Object.entries(commands).map(([commandName, commandLines]) => (
                    <div key={commandName} className="space-y-2">
                        <h4 className="font-medium text-sm text-muted-foreground mb-2">{commandName}</h4>
                        {commandLines.map((line, index) => (
                            <ExamplePhrase
                                key={`${commandName}-${index}`}
                                text={line}
                                messageType={"single"}
                                type={"ms"}
                                maxLength={200}
                            />
                        ))}
                    </div>
                ))}
            </div>
        </>
    );
};

export default CallsTab;
