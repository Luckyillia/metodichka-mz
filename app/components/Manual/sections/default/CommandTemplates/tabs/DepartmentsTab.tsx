import React from 'react';
import ExamplePhrase from '../../../../ExamplePhrase';
import { DepartmentsSettings, GlobalSettings } from '../types';
import { departments } from '../constants';

interface DepartmentsTabProps {
    settings: DepartmentsSettings;
    globalSettings: GlobalSettings;
    onSettingChange: (key: keyof DepartmentsSettings, value: string) => void;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
const generateDepartmentsCommands = (settings: DepartmentsSettings, globalSettings: GlobalSettings) => {
    const { toDepartment, reason } = settings;
    const { city } = globalSettings;

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º "–û—Ç" –ø–æ –≥–æ—Ä–æ–¥—É
    const fromDepartment = city === '–ú–∏—Ä–Ω—ã–π' ? '–û–ö–ë-–ú' : city === '–ü—Ä–∏–≤–æ–ª–∂—Å–∫' ? '–¶–ì–ë-–ü' : '–¶–ì–ë-–ù';

    return {
        '–ó–∞–ø—Ä–æ—Å –Ω–∞—Ä—è–¥–∞ –ú–í–î (–û–ö–ë)': [`d [${fromDepartment}] [${toDepartment}] –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞—Ä—è–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –∑–¥–∞–Ω–∏–µ ${fromDepartment} | –ü—Ä–∏—á–∏–Ω–∞: ${reason}.`],
        '–ó–∞–ø—Ä–æ—Å –Ω–∞—Ä—è–¥–∞ –ú–í–î (–¢–∞–∫—Å–æ–ø–∞—Ä–∫)': [`d [${fromDepartment}] [${toDepartment}] –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞—Ä—è–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ —Ç–∞–∫—Å–æ–ø–∞—Ä–∫ –≥.${city} | –ü—Ä–∏—á–∏–Ω–∞: ${reason}.`],
        '–ó–∞–ø—Ä–æ—Å –Ω–∞—Ä—è–¥–∞ –ú–í–î (–ì–£–í–î)': [`d [${fromDepartment}] [${toDepartment}] –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞—Ä—è–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –ì–£–í–î –≥.${city} | –ü—Ä–∏—á–∏–Ω–∞: ${reason}.`],
        '–ó–∞–ø—Ä–æ—Å –Ω–∞—Ä—è–¥–∞ –ú–í–î (–ë–∞–Ω–∫)': [`d [${fromDepartment}] [${toDepartment}] –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞—Ä—è–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –ë–∞–Ω–∫ –≥.${city} | –ü—Ä–∏—á–∏–Ω–∞: ${reason}.`],
        '–ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø–æ—Å–∞–¥–∫—É': [`d [${fromDepartment}] [${toDepartment}] –ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø–æ—Å–∞–¥–∫—É –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Å—É–¥–Ω–∞. –ü—Ä–∏—á–∏–Ω–∞: ${reason}.`],
        '–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ—Å–∞–¥–∫—É': [`d [${fromDepartment}][${toDepartment}] –†–∞–∑—Ä–µ—à–∞—é!`],
        '–ù–∞—á–∞–ª–æ –¥–≤–∏–∂–µ–Ω–∏—è –∫–æ–ª–æ–Ω–Ω–æ–π': [`d [${fromDepartment}] [–†–ñ–î] –ù–∞—á–∏–Ω–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–Ω–æ–π. –°–∫–æ—Ä–æ—Å—Ç—å –≤ –≥–æ—Ä–æ–¥–µ 60–∫–º\\—á–∞—Å, –∑–∞ –≥–æ—Ä–æ–¥–æ–º 90–∫–º\\—á–∞—Å`]
    };
};

const DepartmentsTab: React.FC<DepartmentsTabProps> = ({ settings, globalSettings, onSettingChange }) => {
    const commands = generateDepartmentsCommands(settings, globalSettings);
    const fromDepartment = globalSettings.city === '–ú–∏—Ä–Ω—ã–π' ? '–û–ö–ë-–ú' : globalSettings.city === '–ü—Ä–∏–≤–æ–ª–∂—Å–∫' ? '–¶–ì–ë-–ü' : '–¶–ì–ë-–ù';

    return (
        <>
            <div className="mb-4">
                <h3>üì¢ –î–æ–∫–ª–∞–¥—ã –≤ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                    <div>
                        <label className="block text-sm font-medium mb-1">–ö–æ–º—É:</label>
                        <select
                            value={settings.toDepartment}
                            onChange={(e) => onSettingChange('toDepartment', e.target.value)}
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        >
                            {departments.map(dept => (
                                <option key={dept} value={dept}>{dept}</option>
                            ))}
                        </select>
                    </div>
                    <div>
                        <label className="block text-sm font-medium mb-1">–ü—Ä–∏—á–∏–Ω–∞:</label>
                        <input
                            type="text"
                            value={settings.reason}
                            onChange={(e) => onSettingChange('reason', e.target.value)}
                            placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É"
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        />
                    </div>
                </div>
            </div>
            <div className="space-y-3">
                {Object.entries(commands).map(([commandName, commandLines]) => (
                    <div key={commandName} className="space-y-2">
                        <h4 className="font-medium text-sm text-muted-foreground mb-2">{commandName}</h4>
                        {commandLines.map((line, index) => (
                            <ExamplePhrase
                                key={`${commandName}-${index}`}
                                text={line}
                                messageType={"single"}
                                type={"ms"}
                                maxLength={200}
                            />
                        ))}
                    </div>
                ))}
            </div>
        </>
    );
};

export default DepartmentsTab;
