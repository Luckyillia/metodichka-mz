import React from 'react';
import ExamplePhrase from '../../../../ExamplePhrase';
import { BindsSettings, GlobalSettings } from '../types';

interface BindsTabProps {
    settings: BindsSettings;
    globalSettings: GlobalSettings;
    onSettingChange: (key: keyof BindsSettings, value: string) => void;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏–Ω–¥–æ–≤ –¥–ª—è –º—É–∂—Å–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
const generateMaleBinds = (settings: BindsSettings, globalSettings: GlobalSettings) => {
    const { firstName, lastName, position } = settings;
    const { city, doctorTag } = globalSettings;
    const hospital = city === '–ú–∏—Ä–Ω—ã–π' ? '–û–ö–ë' : '–¶–ì–ë';

    return {
        '–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ': [
            `bind 1 say –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç ${firstName} ${lastName}, —è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ ${hospital} –≥. ${city}.`,
            `bind 1 do –ù–∞ –≥—Ä—É–¥–∏ –≤–∏—Å–∏—Ç –±–µ–π–¥–∂: [${hospital} –≥. ${city} | ${position} | ${firstName} ${lastName}].`,
            `bind 2 todo –ß—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?*–ø–æ—Å–º–æ—Ç—Ä–µ–≤ –Ω–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞`
        ],
        '–û—Å–º–æ—Ç—Ä –ø–∞—Ü–∏–µ–Ω—Ç–∞': [
            `bind 3 say –°–µ–π—á–∞—Å —è –í–∞—Å –æ—Å–º–æ—Ç—Ä—é.`,
            `bind 3 me —Ç—â–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ —Å—Ç–∞–≤–∏—Ç –µ–º—É –¥–∏–∞–≥–Ω–æ–∑`,
            `bind 3 do –î–∏–∞–≥–Ω–æ–∑ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω.`
        ],
        '–í—ã–¥–∞—á–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞': [
            `bind 4 do –ù–∞ –ø–ª–µ—á–µ –≤–∏—Å–∏—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å—É–º–∫–∞.`,
            `bind 4 me –æ—Ç–∫—Ä—ã–≤ —Å—É–º–∫—É, –¥–æ—Å—Ç–∞–ª –Ω—É–∂–Ω—ã–π –ø—Ä–µ–ø–∞—Ä–∞—Ç`,
            `bind 5 do –ü—Ä–µ–ø–∞—Ä–∞—Ç –≤ —Ä—É–∫–µ.`,
            `bind 5 me –ø–µ—Ä–µ–¥–∞–ª –Ω—É–∂–Ω—ã–π –ø—Ä–µ–ø–∞—Ä–∞—Ç –ø–∞—Ü–∏–µ–Ω—Ç—É`,
            `bind 6 chatbox helpmed`
        ],
        '–ü—Ä–æ—â–∞–Ω–∏–µ': [
            `bind 7 say –í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ, –Ω–µ –±–æ–ª–µ–π—Ç–µ!)`
        ],
        '–û—Ç–∫–∞–∑ –ø–∞—Ü–∏–µ–Ω—Ç–∞': [
            `bind 8 say –•–æ—Ä–æ—à–æ, —Ç–æ–≥–¥–∞ –ª–µ—á–∏—Ç–µ—Å—å –≤ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–µ. –í—Å–µ–≥–æ –≤–∞–º –¥–æ–±—Ä–æ–≥–æ!)`
        ],
        '–°–∞–º–æ–ª–µ—á–µ–Ω–∏–µ': [
            `bind num_7 do –ß–µ—Ä–µ–∑ –ø–ª–µ—á–æ –Ω–∞–¥–µ—Ç–∞ –º–µ–¥. —Å—É–º–∫–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤.`,
            `bind num_7 me –æ—Ç–∫—Ä—ã–≤ —Å—É–º–∫—É, –¥–æ—Å—Ç–∞–ª –∏–∑ –Ω–µ—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –∏ —É–ø–æ—Ç—Ä–µ–±–∏–ª –µ–≥–æ`,
            `bind num_7 chatbox helpmed`
        ]
    };
};

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏–Ω–¥–æ–≤ –¥–ª—è –∂–µ–Ω—Å–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
const generateFemaleBinds = (settings: BindsSettings, globalSettings: GlobalSettings) => {
    const { firstName, lastName, position } = settings;
    const { city, doctorTag } = globalSettings;
    const hospital = city === '–ú–∏—Ä–Ω—ã–π' ? '–û–ö–ë' : '–¶–ì–ë';

    return {
        '–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ': [
            `bind 1 say –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç ${firstName} ${lastName}, —è —Å–æ—Ç—Ä—É–¥–Ω–∏—Ü–∞ ${hospital} –≥. ${city}.`,
            `bind 1 do –ù–∞ –≥—Ä—É–¥–∏ –≤–∏—Å–∏—Ç –±–µ–π–¥–∂: [${hospital} –≥. ${city} | ${position} | ${firstName} ${lastName}].`,
            `bind 2 todo –ß—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?*–ø–æ—Å–º–æ—Ç—Ä–µ–≤ –Ω–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞`
        ],
        '–û—Å–º–æ—Ç—Ä –ø–∞—Ü–∏–µ–Ω—Ç–∞': [
            `bind 3 say –°–µ–π—á–∞—Å —è –í–∞—Å –æ—Å–º–æ—Ç—Ä—é.`,
            `bind 3 me —Ç—â–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ —Å—Ç–∞–≤–∏—Ç –µ–º—É –¥–∏–∞–≥–Ω–æ–∑`,
            `bind 3 do –î–∏–∞–≥–Ω–æ–∑ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω.`
        ],
        '–í—ã–¥–∞—á–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞': [
            `bind 4 do –ù–∞ –ø–ª–µ—á–µ –≤–∏—Å–∏—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å—É–º–∫–∞.`,
            `bind 4 me –æ—Ç–∫—Ä—ã–≤ —Å—É–º–∫—É, –¥–æ—Å—Ç–∞–ª–∞ –Ω—É–∂–Ω—ã–π –ø—Ä–µ–ø–∞—Ä–∞—Ç`,
            `bind 5 do –ü—Ä–µ–ø–∞—Ä–∞—Ç –≤ —Ä—É–∫–µ.`,
            `bind 5 me –ø–µ—Ä–µ–¥–∞–ª–∞ –Ω—É–∂–Ω—ã–π –ø—Ä–µ–ø–∞—Ä–∞—Ç –ø–∞—Ü–∏–µ–Ω—Ç—É`,
            `bind 6 chatbox helpmed`
        ],
        '–ü—Ä–æ—â–∞–Ω–∏–µ': [
            `bind 7 say –í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ, –Ω–µ –±–æ–ª–µ–π—Ç–µ!)`
        ],
        '–û—Ç–∫–∞–∑ –ø–∞—Ü–∏–µ–Ω—Ç–∞': [
            `bind 8 say –•–æ—Ä–æ—à–æ, —Ç–æ–≥–¥–∞ –ª–µ—á–∏—Ç–µ—Å—å –≤ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–µ. –í—Å–µ–≥–æ –≤–∞–º –¥–æ–±—Ä–æ–≥–æ!)`
        ],
        '–°–∞–º–æ–ª–µ—á–µ–Ω–∏–µ': [
            `bind num_7 do –ß–µ—Ä–µ–∑ –ø–ª–µ—á–æ –Ω–∞–¥–µ—Ç–∞ –º–µ–¥. —Å—É–º–∫–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤.`,
            `bind num_7 me –æ—Ç–∫—Ä—ã–≤ —Å—É–º–∫—É, –¥–æ—Å—Ç–∞–ª–∞ –∏–∑ –Ω–µ—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –∏ —É–ø–æ—Ç—Ä–µ–±–∏–ª–∞ –µ–≥–æ`,
            `bind num_7 chatbox helpmed`
        ]
    };
};

const BindsTab: React.FC<BindsTabProps> = ({ settings, globalSettings, onSettingChange }) => {
    const commands = settings.gender === 'male'
        ? generateMaleBinds(settings, globalSettings)
        : generateFemaleBinds(settings, globalSettings);

    return (
        <>
            <div className="mb-4">
                <h3>üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–Ω–¥—ã</h3>

                {/* –õ–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–∏–Ω–¥–æ–≤ */}
                <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mt-4 p-4 bg-muted/50 rounded-lg">
                    <div>
                        <label className="block text-sm font-medium mb-2">–ì–µ–Ω–¥–µ—Ä:</label>
                        <select
                            value={settings.gender}
                            onChange={(e) => onSettingChange('gender', e.target.value)}
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        >
                            <option value="male">–ú—É–∂—Å–∫–æ–π</option>
                            <option value="female">–ñ–µ–Ω—Å–∫–∏–π</option>
                        </select>
                    </div>

                    <div>
                        <label className="block text-sm font-medium mb-2">–ò–º—è:</label>
                        <input
                            type="text"
                            value={settings.firstName}
                            onChange={(e) => onSettingChange('firstName', e.target.value)}
                            placeholder="–ò–º—è"
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        />
                    </div>

                    <div>
                        <label className="block text-sm font-medium mb-2">–§–∞–º–∏–ª–∏—è:</label>
                        <input
                            type="text"
                            value={settings.lastName}
                            onChange={(e) => onSettingChange('lastName', e.target.value)}
                            placeholder="–§–∞–º–∏–ª–∏—è"
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        />
                    </div>

                    <div>
                        <label className="block text-sm font-medium mb-2">–î–æ–ª–∂–Ω–æ—Å—Ç—å:</label>
                        <input
                            type="text"
                            value={settings.position}
                            onChange={(e) => onSettingChange('position', e.target.value)}
                            placeholder="–î–æ–ª–∂–Ω–æ—Å—Ç—å"
                            className="w-full px-3 py-2 border border-input rounded-md bg-background text-sm"
                        />
                    </div>
                </div>
            </div>

            {/* –°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ */}
            <div className="mt-6">
                <h4 className="text-lg font-medium mb-3">üè• –°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞</h4>
                <div className="space-y-4">
                    {Object.entries(commands).map(([bindName, bindLines]) => (
                        <div key={bindName} className="p-4 border border-border rounded-lg">
                            <h5 className="font-medium mb-3 text-sm text-muted-foreground">{bindName}</h5>
                            <div className="space-y-2">
                                {bindLines.map((line: string, index: number) => (
                                    <ExamplePhrase
                                        key={`${bindName}-${index}`}
                                        text={line}
                                        messageType={"single"}
                                        type={"ms"}
                                        maxLength={200}
                                    />
                                ))}
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </>
    );
};

export default BindsTab;
