import React, { useState } from 'react';
import { useCommandSettings } from './hooks/useCommandSettings';
import { TabType } from './types';
import { tagAbbreviations, doctorTags, hospitalAbbreviations } from './constants';

// –ò–º–ø–æ—Ä—Ç –≤–∫–ª–∞–¥–æ–∫
import CallsTab from './tabs/CallsTab';
import PatrolTab from './tabs/PatrolTab';
import PostsTab from './tabs/PostsTab';
import ShiftTab from './tabs/ShiftTab';
import DepartmentsTab from './tabs/DepartmentsTab';
import BindsTab from './tabs/BindsTab';

const CommandTemplatesSection = () => {
    const {
        globalSettings,
        tabSettings,
        handleGlobalSettingChange,
        handleTabSettingChange
    } = useCommandSettings();

    const [activeTab, setActiveTab] = useState<TabType>('calls');

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏
    const handleCallsSettingChange = (key: keyof typeof tabSettings.calls, value: string) => {
        handleTabSettingChange('calls', key, value);
    };

    const handlePatrolSettingChange = (key: keyof typeof tabSettings.patrol, value: string) => {
        handleTabSettingChange('patrol', key, value);
    };

    const handlePostsSettingChange = (key: keyof typeof tabSettings.posts, value: string) => {
        handleTabSettingChange('posts', key, value);
    };

    const handleShiftSettingChange = (key: keyof typeof tabSettings.shift, value: string) => {
        handleTabSettingChange('shift', key, value);
    };

    const handleDepartmentsSettingChange = (key: keyof typeof tabSettings.departments, value: string) => {
        handleTabSettingChange('departments', key, value);
    };

    const handleBindsSettingChange = (key: keyof typeof tabSettings.binds, value: string) => {
        handleTabSettingChange('binds', key, value);
    };

    return (
        <>
            <div className="subsection">
                <h3>üí¨ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ç—ã–≥—Ä–æ–≤–∫–∏</h3>
                <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ–∫—Ü–∏–∏ –∏ –∫–æ–ø–∏—Ä—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã.</p>
            </div>

            {/* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
            <div className="subsection">
                <h3>‚öôÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                    <div>
                        <label className="block text-sm font-medium mb-2">–ì–æ—Ä–æ–¥:</label>
                        <select
                            value={globalSettings.city}
                            onChange={(e) => handleGlobalSettingChange('city', e.target.value)}
                            className="w-full px-3 py-2 border border-input rounded-md bg-background"
                        >
                            <option value="–ú–∏—Ä–Ω—ã–π">–ú–∏—Ä–Ω—ã–π</option>
                            <option value="–ü—Ä–∏–≤–æ–ª–∂—Å–∫">–ü—Ä–∏–≤–æ–ª–∂—Å–∫</option>
                            <option value="–ù–µ–≤—Å–∫–∏–π">–ù–µ–≤—Å–∫–∏–π</option>
                        </select>
                    </div>
                    <div>
                        <label className="block text-sm font-medium mb-2">–¢–µ–≥ –≤—Ä–∞—á–∞:</label>
                        <div className="space-y-2">
                            <select
                                value={globalSettings.doctorTag}
                                onChange={(e) => handleGlobalSettingChange('doctorTag', e.target.value)}
                                className="w-full px-3 py-2 border border-input rounded-md bg-background"
                            >
                                {doctorTags.map(tag => (
                                    <option key={tag.value} value={tag.value}>
                                        {tag.label}
                                    </option>
                                ))}
                            </select>
                            <p className="text-xs text-muted-foreground">
                                {tagAbbreviations[globalSettings.doctorTag as keyof typeof tagAbbreviations]}
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            {/* –í–∫–ª–∞–¥–∫–∏ */}
            <div className="flex gap-2 mb-6 flex-wrap">
                <button
                    onClick={() => setActiveTab('calls')}
                    className={`px-4 py-2 rounded-lg font-medium transition-all ${
                        activeTab === 'calls'
                            ? 'bg-primary text-primary-foreground shadow-md'
                            : 'bg-card text-card-foreground hover:bg-accent hover:text-accent-foreground'
                    }`}
                >
                    üöë –í—ã–∑–æ–≤—ã
                </button>
                <button
                    onClick={() => setActiveTab('patrol')}
                    className={`px-4 py-2 rounded-lg font-medium transition-all ${
                        activeTab === 'patrol'
                            ? 'bg-primary text-primary-foreground shadow-md'
                            : 'bg-card text-card-foreground hover:bg-accent hover:text-accent-foreground'
                    }`}
                >
                    üöî –ü–∞—Ç—Ä—É–ª—å
                </button>
                <button
                    onClick={() => setActiveTab('posts')}
                    className={`px-4 py-2 rounded-lg font-medium transition-all ${
                        activeTab === 'posts'
                            ? 'bg-primary text-primary-foreground shadow-md'
                            : 'bg-card text-card-foreground hover:bg-accent hover:text-accent-foreground'
                    }`}
                >
                    üìç –ü–æ—Å—Ç—ã
                </button>
                <button
                    onClick={() => setActiveTab('shift')}
                    className={`px-4 py-2 rounded-lg font-medium transition-all ${
                        activeTab === 'shift'
                            ? 'bg-primary text-primary-foreground shadow-md'
                            : 'bg-card text-card-foreground hover:bg-accent hover:text-accent-foreground'
                    }`}
                >
                    ‚è∞ –°–º–µ–Ω–∞
                </button>
                <button
                    onClick={() => setActiveTab('departments')}
                    className={`px-4 py-2 rounded-lg font-medium transition-all ${
                        activeTab === 'departments'
                            ? 'bg-primary text-primary-foreground shadow-md'
                            : 'bg-card text-card-foreground hover:bg-accent hover:text-accent-foreground'
                    }`}
                >
                    üì¢ –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã
                </button>
                <button
                    onClick={() => setActiveTab('binds')}
                    className={`px-4 py-2 rounded-lg font-medium transition-all ${
                        activeTab === 'binds'
                            ? 'bg-primary text-primary-foreground shadow-md'
                            : 'bg-card text-card-foreground hover:bg-accent hover:text-accent-foreground'
                    }`}
                >
                    üéØ –ë–∏–Ω–¥—ã
                </button>
            </div>

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
            <div className="subsection">
                {activeTab === 'calls' && (
                    <CallsTab
                        settings={tabSettings.calls}
                        globalSettings={globalSettings}
                        onSettingChange={handleCallsSettingChange}
                    />
                )}

                {activeTab === 'patrol' && (
                    <PatrolTab
                        settings={tabSettings.patrol}
                        globalSettings={globalSettings}
                        onSettingChange={handlePatrolSettingChange}
                    />
                )}

                {activeTab === 'posts' && (
                    <PostsTab
                        settings={tabSettings.posts}
                        globalSettings={globalSettings}
                        onSettingChange={handlePostsSettingChange}
                    />
                )}

                {activeTab === 'shift' && (
                    <ShiftTab
                        settings={tabSettings.shift}
                        globalSettings={globalSettings}
                        onSettingChange={handleShiftSettingChange}
                    />
                )}

                {activeTab === 'departments' && (
                    <DepartmentsTab
                        settings={tabSettings.departments}
                        globalSettings={globalSettings}
                        onSettingChange={handleDepartmentsSettingChange}
                    />
                )}

                {activeTab === 'binds' && (
                    <BindsTab
                        settings={tabSettings.binds}
                        globalSettings={globalSettings}
                        onSettingChange={handleBindsSettingChange}
                    />
                )}
            </div>

            {/* –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä */}
            <div className="subsection">
                <h3>üìö –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä</h3>

                <div className="mb-6">
                    <h4 className="text-lg font-medium mb-3">üè• –¢–µ–≥–∏ –≤—Ä–∞—á–µ–π</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {Object.entries(tagAbbreviations).map(([abbr, fullName]) => (
                            <div key={abbr} className="p-3 border border-border rounded-lg">
                                <span className="font-medium">{abbr}</span> - {fullName}
                            </div>
                        ))}
                    </div>
                </div>

                <div>
                    <h4 className="text-lg font-medium mb-3">üè• –ù–∞–∑–≤–∞–Ω–∏—è –±–æ–ª—å–Ω–∏—Ü</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {Object.entries(hospitalAbbreviations).map(([abbr, fullName]) => (
                            <div key={abbr} className="p-3 border border-border rounded-lg">
                                <span className="font-medium">{abbr}</span> - {fullName}
                            </div>
                        ))}
                    </div>
                </div>
            </div>

            <div className="note">
                <strong>üí° –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:</strong>
                <ul className="list-disc pl-5 space-y-1 mt-2">
                    <li>–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ—á–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–µ–ø–µ—Ä—å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏</li>
                    <li>–õ–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ</li>
                    <li>–¢–µ–≥ –≤—Ä–∞—á–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω–æ –∫–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º</li>
                    <li>–í –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞—Ö –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±–∞ –ø–æ–ª—è –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö</li>
                </ul>
            </div>
        </>
    );
};

export default CommandTemplatesSection;
